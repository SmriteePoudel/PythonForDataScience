{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "12999ee3-061e-4af2-a2e0-24bcd9d69c71",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import pandas_datareader.data as web\n",
    "import datetime\n",
    "\n",
    "# a) Creating DataFrames\n",
    "\n",
    "# From List\n",
    "data_list = [[1, 'Alice', 25], [2, 'Bob', 30], [3, 'Charlie', 22]]\n",
    "df_list = pd.DataFrame(data_list, columns=['ID', 'Name', 'Age'])\n",
    "print(\"DataFrame from List:\\n\", df_list)\n",
    "\n",
    "# From Dictionary\n",
    "data_dict = {'ID': [1, 2, 3], 'Name': ['Alice', 'Bob', 'Charlie'], 'Age': [25, 30, 22]}\n",
    "df_dict = pd.DataFrame(data_dict)\n",
    "print(\"\\nDataFrame from Dictionary:\\n\", df_dict)\n",
    "\n",
    "# From List of Dictionaries\n",
    "data_list_dicts = [{'ID': 1, 'Name': 'Alice', 'Age': 25}, {'ID': 2, 'Name': 'Bob', 'Age': 30}, {'ID': 3, 'Name': 'Charlie', 'Age': 22}]\n",
    "df_list_dicts = pd.DataFrame(data_list_dicts)\n",
    "print(\"\\nDataFrame from List of Dictionaries:\\n\", df_list_dicts)\n",
    "\n",
    "# Column Selection\n",
    "print(\"\\nColumn Selection (Name column):\\n\", df_dict['Name'])\n",
    "\n",
    "# Column Addition\n",
    "df_dict['Salary'] = [50000, 60000, 45000]\n",
    "print(\"\\nAfter Adding Salary Column:\\n\", df_dict)\n",
    "\n",
    "# Column Deletion\n",
    "df_dict.drop(columns=['Salary'], inplace=True)\n",
    "print(\"\\nAfter Deleting Salary Column:\\n\", df_dict)\n",
    "\n",
    "# Row Selection\n",
    "print(\"\\nSelecting First Two Rows:\\n\", df_dict.iloc[:2])\n",
    "\n",
    "# b) Descriptive Statistics\n",
    "\n",
    "df_stats = pd.DataFrame({'A': np.random.randint(1, 100, 10), 'B': np.random.randint(1, 100, 10)})\n",
    "print(\"\\nDescriptive Statistics:\")\n",
    "\n",
    "print(\"\\nSum:\\n\", df_stats.sum())\n",
    "print(\"\\nMean:\\n\", df_stats.mean())\n",
    "print(\"\\nMedian:\\n\", df_stats.median())\n",
    "print(\"\\nMode:\\n\", df_stats.mode())\n",
    "print(\"\\nStandard Deviation:\\n\", df_stats.std())\n",
    "print(\"\\nSkewness:\\n\", df_stats.skew())\n",
    "print(\"\\nKurtosis:\\n\", df_stats.kurtosis())\n",
    "print(\"\\nCumulative Sum:\\n\", df_stats.cumsum())\n",
    "print(\"\\nCumulative Product:\\n\", df_stats.cumprod())\n",
    "print(\"\\nPercent Change:\\n\", df_stats.pct_change())\n",
    "\n",
    "# c) Fetching Stock Data and Computing Correlation & Covariance\n",
    "\n",
    "start = datetime.datetime(2024, 1, 1)\n",
    "end = datetime.datetime(2025, 1, 1)\n",
    "\n",
    "# Fetch stock data\n",
    "df_stock = web.DataReader(['AAPL', 'GOOG'], 'yahoo', start, end)['Adj Close']\n",
    "\n",
    "# Compute correlation and covariance\n",
    "print(\"\\nStock Price Correlation:\\n\", df_stock.corr())\n",
    "print(\"\\nStock Price Covariance:\\n\", df_stock.cov())\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:anaconda3]",
   "language": "python",
   "name": "conda-env-anaconda3-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
